#!/usr/bin/env node

// Module dependencias
var app = require("../app");
var debug = require("debug")("nodepop:server");
var http = require("http");

// Obtener el puerto del entorno y almacenarlo en Express
var port = normalizePort(process.env.PORT || "3000");
app.set("port", port);

// Crear el servidor HTTP
var server = http.createServer(app);

// Escuchar en el puerto provisto, en todas las interfaces de red
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

// Normalizar un puerto en un número, una cadena o falso
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // nombre
    return val;
  }

  if (port >= 0) {
    // número de puerto
    return port;
  }

  return false;
}

// "Event listener" para el evento de "error" del servidor HTTP
function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string"
    ? "Pipe " + port
    : "Port " + port;

  // Manejar errores de escucha específicos con mensajes amigables
  switch (error.code) {
    case "EACCES":
      console.error(bind + "requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + "is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// "Event listener" para el evento de "escucha" del servidor HTTP.
function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string"
    ? "pipe " + addr
    : "port " + addr.port;
  debug("Listening on " + bind);
}
